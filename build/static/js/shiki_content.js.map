{"version":3,"file":"static/js/shiki_content.js","mappings":"yBAWO,IAAKA,GAGX,SAHWA,GAAAA,EAAAA,EAAM,iBAANA,EAAAA,EAAM,qBAGjB,CAHWA,IAAAA,EAAM,KCPlB,IAQMC,EAA+B,SAACC,EAAwBC,EAAsCC,GAChG,IAJqD,IAA9CC,OAAOC,SAASC,KAAKC,QAAQ,aAAiF,IAA3DC,SAASC,uBAAuB,gBAAgBC,OAIpF,CAOlBP,EANgC,CAC5BQ,MAAO,yFACPC,YAAa,GACbC,YAAa,yHACbC,OAAQ,IAGhB,CACA,IAAMC,EAlBa,SAACd,EAAwBC,GAC5C,OAAOA,EAAOc,KAAOC,OAAOC,QAAQF,EACxC,CAgBwBG,CAAelB,EAASC,GACxCa,GAAed,EAAQmB,OAASrB,EAAOsB,OAOvClB,EANgC,CAC5BQ,MAAOH,SAASG,MAChBC,YAAaJ,SAASc,cAAc,2BAA4BC,aAAa,WAC7EV,YAAkF,MAArEL,SAASC,uBAAuB,0BAA0Be,KAAK,GAAahB,SAASC,uBAAuB,0BAA0Be,KAAK,GAAIC,UAAYjB,SAASC,uBAAuB,0BAA0Be,KAAK,GAAIC,UAC3OX,OAAQN,SAASC,uBAAuB,YAAYe,KAAK,GAAIE,qBAAqB,OAAO,GAAGC,KAIxG,EAM6B,kBAAzBvB,OAAOC,SAASuB,MAAqD,kBAAzBxB,OAAOC,SAASuB,MAH5DX,OAAOC,QAAQW,UAAUC,YAAY9B,GAOzC,IAAM+B,EAAe,SAACpB,EAAeqB,GACjC,IAAMC,EAASzB,SAAS0B,cAAc,KAOtC,OANAD,EAAOE,OAAS,SAChBF,EAAOG,UAAY,gBACnBH,EAAOtB,MAAQA,EACfsB,EAAOI,KAAO1B,EACdsB,EAAO3B,KAAO0B,EACdC,EAAOK,IAAM,+BACNL,CACX,EAEAhB,OAAOC,QAAQW,UAAUC,aAAY,SAASS,GAC1C,GAAIA,GAA4B,kBAAjBA,EAAQC,OACdhC,SAASiC,eAAe,yBAAwE,IAA9CrC,OAAOC,SAASC,KAAKC,QAAQ,aAA4E,IAAtDC,SAASC,uBAAuB,WAAWC,QAAsE,OAAtDF,SAASc,cAAc,2BAAoC,CAC5N,IAAMoB,EAAYC,UAAUnC,SAASc,cAAc,2BAA4BC,aAAa,YACtFqB,EAAMpC,SAAS0B,cAAc,OACnCU,EAAI5B,GAAK,sBACTR,SAASC,uBAAuB,WAAWe,KAAK,GAAIqB,YAAYD,GAAKC,YAAYd,EAAa,WAAY,8CAAgDW,IAC1JlC,SAASC,uBAAuB,WAAWe,KAAK,GAAIqB,YAAYD,GAAKC,YAAYd,EAAa,cAAe,sCAAwCW,GACzJ,CAER,G","sources":["types/DOMMessages.ts","chromeServices/shiki_content.ts"],"sourcesContent":["export type DOMMessage = {\r\n    type: 'GET_DOM'\r\n}\r\n\r\nexport type DOMMessageResponse = {\r\n    title: string;\r\n    metaContent: string;\r\n    description: string;\r\n    poster: string;\r\n}\r\n\r\nexport enum Sender {\r\n    React,\r\n    Content,\r\n}\r\n\r\nexport interface ChromeMessage {\r\n    from: Sender,\r\n    message: any\r\n}","import {ChromeMessage, DOMMessageResponse, Sender} from '../types';\r\n\r\ntype MessageResponse = (response?: any) => void\r\n\r\nconst validateSender = (message: ChromeMessage, sender: chrome.runtime.MessageSender) => {\r\n    return sender.id === chrome.runtime.id;\r\n}\r\n\r\nconst isPossibleLink = (): boolean => {\r\n    return window.location.href.indexOf(\"/animes/\") === -1 || document.getElementsByClassName(\"c-info-right\").length === 0;\r\n}\r\n\r\nconst messagesFromReactAppListener = (message: ChromeMessage, sender: chrome.runtime.MessageSender, response: MessageResponse) => {\r\n    if (isPossibleLink()) {\r\n        const res: DOMMessageResponse = {\r\n            title: \"Не найдено аниме\",\r\n            metaContent: \"\",\r\n            description: \"Вы не на странице аниме\",\r\n            poster: \"\"\r\n        };\r\n        response(res)\r\n    }\r\n    const isValidDate = validateSender(message, sender)\r\n    if (isValidDate && message.from === Sender.React) {\r\n        const res: DOMMessageResponse = {\r\n            title: document.title,\r\n            metaContent: document.querySelector(\"meta[itemprop=headline]\")!.getAttribute('content')!,\r\n            description: document.getElementsByClassName(\"b-text_with_paragraphs\").item(1) != null ? document.getElementsByClassName(\"b-text_with_paragraphs\").item(1)!.innerHTML : document.getElementsByClassName(\"b-text_with_paragraphs\").item(0)!.innerHTML,\r\n            poster: document.getElementsByClassName(\"c-poster\").item(0)!.getElementsByTagName(\"img\")[0].src\r\n        };\r\n        response(res)\r\n    }\r\n}\r\n\r\nconst main = () => {\r\n    chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\r\n}\r\n\r\nif (window.location.host === \"shikimori.one\" || window.location.host === \"shikimori.org\") {\r\n    main();\r\n}\r\n\r\nconst generateLink = (title: string, link: string): HTMLAnchorElement => {\r\n    const button = document.createElement('a');\r\n    button.target = \"_blank\";\r\n    button.className = \"b-link_button\";\r\n    button.title = title;\r\n    button.text = title;\r\n    button.href = link;\r\n    button.rel = \"nofollow noopener noreferrer\";\r\n    return button\r\n}\r\n\r\nchrome.runtime.onMessage.addListener(function(request) {\r\n    if (request && request.type === 'page-rendered') {\r\n        if (!document.getElementById(\"answer_is_forty_two\") && window.location.href.indexOf(\"/animes/\") !== -1 && document.getElementsByClassName('c-image').length !== 0 && document.querySelector(\"meta[itemprop=headline]\") !== null){\r\n            const linkAnime = encodeURI(document.querySelector(\"meta[itemprop=headline]\")!.getAttribute('content')!);\r\n            const div = document.createElement('div');\r\n            div.id = \"answer_is_forty_two\";\r\n            document.getElementsByClassName('c-image').item(0)!.appendChild(div).appendChild(generateLink(\"Anime365\", \"https://smotret-anime.com/catalog/search?q=\" + linkAnime));\r\n            document.getElementsByClassName('c-image').item(0)!.appendChild(div).appendChild(generateLink(\"AnimeGo.org\", \"https://animego.org/search/anime?q=\" + linkAnime));\r\n        }\r\n    }\r\n});\r\n\r\n"],"names":["Sender","messagesFromReactAppListener","message","sender","response","window","location","href","indexOf","document","getElementsByClassName","length","title","metaContent","description","poster","isValidDate","id","chrome","runtime","validateSender","from","React","querySelector","getAttribute","item","innerHTML","getElementsByTagName","src","host","onMessage","addListener","generateLink","link","button","createElement","target","className","text","rel","request","type","getElementById","linkAnime","encodeURI","div","appendChild"],"sourceRoot":""}